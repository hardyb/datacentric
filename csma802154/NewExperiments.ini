
[Config Zigbee_Parallel_121_withBinding]


# detail: THE BELOW TEXT BUT FOR PARALLEL PAIRS

# we want to measure the overhead for sending first data from one node to another
# for example an occ/temp sensor to an interested appliance

# A common strategy in AODV based Zigbee is for
# Service discovery
# and Bind request
# Then the source can request a route and send the data

# We want to measure the overall time for first delivery so the first data packet must
# be immediate.  If it is at some time in the future then the adhoc delay between establishing
# binding and sending data will be unfairly included in the stats.

# Omnet configuration:
# for aodv if we set true 'bindWithSource' then any data names set with sourceFor
# will be setup in the source hosts binding table but will not have any bound addresses
# until a service discovery completes.  In the mean time sent data will be queued until an
# address is bound.

# Currently in this simple implementation queued data does not expire and (and this does need
# fixing) is not deleted after sending.  Also not queued if at least one binding found (limitation)

# So...

# We want to configure sending data to occurr as soon as the host is configured so that data is queued
# then sent to AODV as soon as binding is established.




# Do we timestamp the packet when it is created and queued or when it is sent

# does this depend on  what we want to measure?

# if binding is initiated at the same time as data sending and we want to 
# consider the overhead in sending first packet then we want to set timestamp when 
# queueing




description = ""

*.numFixHosts = 250
repeat = 25
seed-set = ${repetition}
num-rngs = 2




**.fixhost[*].udpApp.bindWithSource = true

# Multiple randomly placed host pairs accross the whole network
**.fixhost[1].app.sourceFor = "\x83"+"\x1"+"\x0"
**.fixhost[2].app.sourceFor = "\x83"+"\x2"+"\x0"
**.fixhost[3].app.sourceFor = "\x83"+"\x3"+"\x0"
**.fixhost[4].app.sourceFor = "\x83"+"\x4"+"\x0"
**.fixhost[5].app.sourceFor = "\x83"+"\x5"+"\x0"
**.fixhost[6].app.sourceFor = "\x83"+"\x6"+"\x0"
**.fixhost[11].app.sinkFor   = "\x83"+"\x1"+"\x0"
**.fixhost[12].app.sinkFor   = "\x83"+"\x2"+"\x0"
**.fixhost[13].app.sinkFor   = "\x83"+"\x3"+"\x0"
**.fixhost[14].app.sinkFor   = "\x83"+"\x4"+"\x0"
**.fixhost[15].app.sinkFor   = "\x83"+"\x5"+"\x0"
**.fixhost[16].app.sinkFor   = "\x83"+"\x6"+"\x0"





# Varying parameters
csma802154net.iVar3 = ${itVar3=1..6}


# nodeParsUsed - <forthisparam> <fromthisnode> <forthismanynodes>...
# use the value configured, otherwise set to "", zero or false
csma802154net.nodeParsUsed = "sourceFor 1 ${itVar3} " \
							+ "sinkFor 11 ${itVar3} "


**.fixhost[11..16].app.simAppTerminationReason = 2 # allPackets 
**.fixhost[11..16].app.isAppliance = true

**.fixhost[1].app.actionThreads = "heat_sensor_one_pkt_1.txt"
**.fixhost[2].app.actionThreads = "heat_sensor_one_pkt_2.txt"
**.fixhost[3].app.actionThreads = "heat_sensor_one_pkt_3.txt"
**.fixhost[4].app.actionThreads = "heat_sensor_one_pkt_4.txt"
**.fixhost[5].app.actionThreads = "heat_sensor_one_pkt_5.txt"
**.fixhost[6].app.actionThreads = "heat_sensor_one_pkt_6.txt"



# Simulation completion
sim-time-limit = 7s
**.expectedDataArrivals = ${itVar3}


# Timed behaviour

# All hosts start radio etc and also sending data at time zero which should
# come straight after startup host congiguration  
**.fixhost[*].app.nodeStartTime = 0
**.fixhost[*].app.scheduleStartTime = 0






[Config Zigbee__Pathloss_121_Binding]

description = ""

# Varying parameters
**.numFixHosts = 250
repeat = 25
seed-set = ${repetition}
num-rngs = 2



# Adjustments to common
**.phy.pathLossAlpha = ${pLoss=2..5 step 0.1} 


**.fixhost[*].udpApp.bindWithSource = true

# Two randomly placed hosts accross the whole network
**.fixhost[0].app.sourceFor = "\x83"+"\x2"+"\x0"
**.fixhost[1].app.sinkFor =   "\x83"+"\x2"+"\x0"
**.fixhost[1].app.simAppTerminationReason = 1
**.fixhost[1].app.isAppliance = true

**.fixhost[0].app.actionThreads = "heat_sensor_one_pkt.txt"





# Simulation completion
sim-time-limit = 8s
**.expectedDataArrivals = 1


# Timed behaviour

# All hosts start radio etc and also sending data at time zero which should
# come straight after startup host congiguration  
**.fixhost[*].app.nodeStartTime = 0
**.fixhost[*].app.scheduleStartTime = 0





