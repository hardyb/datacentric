
#[Config DataCentricNet]
#a = "hi"


[General]
network	 = DataCentricNet
sim-time-limit						 = 5h




cmdenv-express-mode						 = true

#tkenv-default-run=1

# debug switch
**.coreDebug						 = false				# defined by channel control
**.app.debug						 = false					
**.battery.debug					 = false
**.net.debug						 = false
**.mac.debug						 = true
**.phy.debug						 = false
**.debug							 = false



##############################################################################
#       Network settings                                                     #
##############################################################################

# DATA CENTRIC INI FILE
#################################################


#**.numHosts						 = 256
**.numHosts						 = 125

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
#**.constraintAreaMaxX = 56m
#**.constraintAreaMaxY = 56m
#**.constraintAreaMaxX = 20m
#**.constraintAreaMaxY = 30m
#**.constraintAreaMaxZ = 10m
**.constraintAreaMaxX = 10m
**.constraintAreaMaxY = 12m
**.constraintAreaMaxZ = 3.5m








**.host[*].nic.mac.useIeee802Ctrl = false # ie use Ieee802154NetworkCtrlInfo which includes SNR and POWERREC
**.host[*].nic.mac.rxSetupTime = 0.00108s


**.host[*].nic.mac.macAckWaitDuration = 0.00056s # default
#**.host[*].nic.mac.macAckWaitDuration = 0.005s
**.host[*].nic.mac.macMaxCSMABackoffs = 10		
**.host[*].nic.mac.macMaxFrameRetries = 4


#**.host[*].net.nodeConstraint = intuniform(1,9)


#**.host[0].net.meanDownTime = 0.2 # down time as a proportion of interval
#**.host[0].net.meanDownTimeInterval = 600 # down for an average of 2 mins every 10 mins 
#**.host[0].net.nodeConstraint = 200 # out of 0..255 this is quite an unstable node

# Make all nodes very stable

#**.host[38].net.meanDownTime = 0.5 # 0.5 # down time as a proportion of interval
#**.host[38].net.meanDownTimeInterval = 10 # down for an average of 2.5 min every 5 mins 
#**.host[38].net.nodeConstraint = 10 # out of 0..255 this is a pretty stable node


**.host[*].net.meanDownTime = 1/1440 # 0.000694 # down time as a proportion of interval
**.host[*].net.meanDownTimeInterval = 86400 # down for an average of 1 min a day 
**.host[*].net.nodeConstraint = 10 # out of 0..255 this is a pretty stable node

# try to create a relationship between actual node stability and stability cost


# need to think about this value a bit more
#**.host[0..31].net.Stability = 0.0001 # 100% stable
#**.host[32..94].net.Stability = 0.05 # 95% stable
#**.host[95..124].net.Stability = 0.2 # 80% stable
#**.host[*].net.Stability = 0.0001 # 100% stable


#**.host[5].net.Stability = 0.0001 # 80% stable
#**.host[*].net.Stability = 0.008 # ? stable


#**.host[5].net.Stability = 1 # 99.6 % stable, one node
#**.host[32..94].net.Stability = 85 # 66% stable, half the nodes
#**.host[95..124].net.Stability = 128 # 50% stable, quarter the nodes
**.host[*].net.Stability = 0 # 99.6 % stable, quarter the nodes


##############################################################################
#       Mobility settings                                                    #
##############################################################################
**.host[*].mobilityType = "StationaryMobility"
**.mobility.initFromDisplayString = false
#**.host[0].mobility.initialX		 = 50m
#**.host[0].mobility.initialY		 = 50m
#**.host[1].mobility.initialX		 = 150m
#**.host[1].mobility.initialY		 = 50m
#**.host[2].mobility.initialX		 = 250m
#**.host[2].mobility.initialY		 = 50m
#**.host[*].mobility.initialZ		 = 0m


##############################################################################
#       Parameters for the application-layer                                 #
##############################################################################

#        PREPREPARED STRINGS FOR USE
#        string STRINGEND = "\x0";
#        string DEMAND_QUERYBASED = "\x2";
#        string DEMAND_COLLABERATIONBASED = "\x42";
#        string ENVIRONMENTAL_EVENTBASED = "\x83";
#        string CURRENT = "\x2";
#        string BID = "\x1";
#        string OCCUPANCY = "\x1";
#        string TEMP = "\x2";





# SET NODE STARTING TIMES
#**.host[*].app.nodeStartTime = 1.0 # enable send/receive send grads and hello


#**.host[48].app.scheduleStartTime = 3.1 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[100].app.scheduleStartTime = 3.2 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[25].app.scheduleStartTime = 3.3 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[90].app.scheduleStartTime = 3.4 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[64].app.scheduleStartTime = 3.5 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[32].app.scheduleStartTime = 3.6 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[110].app.scheduleStartTime = 3.7 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[9].app.scheduleStartTime = 3.8 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[51].app.scheduleStartTime = 3.9 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[72].app.scheduleStartTime = 4.0 # begin pattern of sending data, eg temp, watts, occupancy
#**.host[*].app.scheduleStartTime = 3.00 # begin pattern of sending data, eg temp, watts, occupancy





# SET THE NODE CONTEXT / LOCATION I.E. ROOM, FLOOR ETC
#**.host[6..9].app.nodeContext = "\x06\x02"
#**.host[16..19].app.nodeContext = "\x06\x02"
#**.host[26..29].app.nodeContext = "\x06\x02"
#**.host[36..39].app.nodeContext = "\x06\x02"
# Need to set context by xy region now since random deployment

# context is now done with regions in the network manager
# currently hardcoded example

# Leave to region assignment
#**.host[*].app.nodeContext = "\x06"


# SET NODES SINK AND SOURCE SETTINGS 
#**.host[9].app.sourceFor = "\x83"+"\x2"+"\x0" # ENVIRONMENTAL_EVENTBASED+TEMP+STRINGEND
#**.host[36].app.sinkFor = "\x83"+"\x2"+"\x0" # ENVIRONMENTAL_EVENTBASED+TEMP+STRINGEND
#**.host[39].app.sinkFor = "\x83"+"\x2"+"\x0" # ENVIRONMENTAL_EVENTBASED+TEMP+STRINGEND
#**.host[36].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[39].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[90].app.sinkFor = "\x2"+"\x2"+"\x0"  # DEMAND_QUERYBASED+CURRENT+STRINGEND



# sink and source strings can be multiple delimeted by spaces
# this has not been tested yet though
# sink for demand data from ten source appliances
#**.host[5].app.sinkFor = "\x2"+"\x2"+"\x0"  # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[48].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[100].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[25].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[90].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[64].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[32].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[110].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[9].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[51].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[72].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
#**.host[*].app.sourceFor = ""
#**.host[*].app.sinkFor = ""





# Scenario X
# four regions, each with one publication source for temperature and three sinks.  
# Currently they can only be all started at the same time until the config feature is improved
################################################################################################

**.host[*].app.nodeStartTime = 1.0 # enable send/receive send grads and hello
**.host[*].app.scheduleStartTime = 3.00 # begin pattern of sending data, eg temp, watts, occupancy

**.host[*].app.sourceFor = ""
**.host[*].app.sinkFor = ""


**.dataCentricNetworkMan.sources = "\x06\x01"+",0,0,"+"\x83"+"\x2"+"\x0"+",heat_sensor.txt,"+\
								   "\x06\x02"+",0,0,"+"\x83"+"\x2"+"\x0"+",heat_sensor.txt,"+\
								   "\x06\x03"+",0,0,"+"\x83"+"\x2"+"\x0"+",heat_sensor.txt,"+\
								   "\x06\x04"+",0,0,"+"\x83"+"\x2"+"\x0"+",heat_sensor.txt"
								   # ENVIRONMENTAL_EVENTBASED+TEMP+STRINGEND

**.dataCentricNetworkMan.sinks = "\x06\x01"+",1,3,"+"\x83"+"\x2"+"\x0"+",sink_NR,"+\
								 "\x06\x02"+",1,3,"+"\x83"+"\x2"+"\x0"+",sink_NR,"+\
								 "\x06\x03"+",1,3,"+"\x83"+"\x2"+"\x0"+",sink_NR,"+\
								 "\x06\x04"+",1,3,"+"\x83"+"\x2"+"\x0"+",sink_NR"
								   # ENVIRONMENTAL_EVENTBASED+TEMP+STRINGEND

**.host[*].app.actionThreads = ""

################################################################################################














#**.dataCentricNetworkMan.sinks = xxx


 





# SET SOURCE DATA SENDING OR ACTION SCHEDULES FOR NODES 
#**.host[9].app.actionThreads = "heat_sensor.txt"
#**.host[36].app.actionThreads = "kettle.txt"
#**.host[39].app.actionThreads = "kettle.txt"

#**.host[48].app.actionThreads = "Fridge.txt"
#**.host[100].app.actionThreads = "Fridge.txt"
#**.host[25].app.actionThreads = "Fridge.txt"
#**.host[90].app.actionThreads = "Fridge.txt"
#**.host[64].app.actionThreads = "Fridge.txt"
#**.host[32].app.actionThreads = "Fridge.txt"
#**.host[110].app.actionThreads = "Fridge.txt"
#**.host[9].app.actionThreads = "Fridge.txt"
#**.host[51].app.actionThreads = "Fridge.txt"
#**.host[72].app.actionThreads = "Fridge.txt"




#**.host[*].app.actionThreads = ""



# EARLY IDEA??????
**.host[*].app.mains = true
**.host[*].app.probabilityDown = 0



# OLD / NOT USED ??????
**.host[0].app.isSink = false
**.host[1].app.isSink = false
**.app.packetSize= 10B 
**.app.interDepartureTime= 300s 
**.app.firstPacketTime=300s 
**.host[0].app.trafDest="host[1]"
**.host[1].app.trafDest="host[2]"



#       OLD STUFF ??????
# host[4].app.sourceFor = DEMAND_QUERYBASED+CURRENT+STRINGEND;
# **.host[*].app.sourceFor = ""
# **.host[1..24].app.sourceFor = ""
# host[20].app.sinkFor = DEMAND_QUERYBASED+CURRENT+STRINGEND;
# host{0..19}.app.sinkFor = "";
# host{21..24}.app.sinkFor = "";
# **.host[4].app.sourceFor = "\x2"+"\x2"+"\x0" # DEMAND_QUERYBASED+CURRENT+STRINGEND
# **.host[20].app.sinkFor = "\x2"+"\x2"+"\x0"  # DEMAND_QUERYBASED+CURRENT+STRINGEND


# TEMP PRACTICE
#**.host[0].app.sourceFor = "\x48\x49\x54"
#**.host[0].app.sourceFor = **.a+b+c
#**.a = ""











##############################################################################
#       Parameters for the network-layer                    #
##############################################################################
**.host[1].net.isPANCoor			 = true		# should be consistent with those in MAC
**.host[*].net.isPANCoor			 = false

##############################################################################
#       Parameters for the network interface and IFqueue               #
##############################################################################
**.nic.ifqType						 = "DropTailQueue"
**.ifq.frameCapacity				 = 20
#**.ifq.dropPk.

##############################################################################
#       Parameters for MAC layer                             #
##############################################################################
**.host[1].**.mac.isPANCoor			 = true
**.host[*].**.mac.isPANCoor			 = false
**.mac.panCoorName				 = "host[1]"
**.mac.BO						 = 8		# range [1,14]
**.mac.SO						 = 4		#range [0, BO)
# GTS settings
**.host[*].**.mac.ack4Gts			 = true
**.host[*].**.mac.gtsPayload			 = 10	# should be consistent with that in trafconfig.xml
**.host[*].**.mac.dataTransMode		 = 3		# 1: direct; 2: indirect; 3: GTS
**.host[0].**.mac.isRecvGTS			 = false	# transmit GTS
**.host[2].**.mac.isRecvGTS			 = true	# receive GTS
**.host[*].**.mac.isRecvGTS			 = true	# ignored

##############################################################################
#       Parameters for PHY layer                                    #
##############################################################################
**.phy.channelNumber				 = 11		# default 2.4G, (range [0, 26])
**.phy.transmitterPower				 = 0.1mW  	#[mW]
**.phy.sensitivity					 = -85dBm	#[dBm]
**.phy.thermalNoise				 = -110dBm	#[dBm]
**.phy.pathLossAlpha				 = 4
**.phy.snirThreshold				 = 4dB

##############################################################################
#       Parameters for the channel control                                   #
##############################################################################
# channel physical parameters
*.channelControl.carrierFrequency = 2.4GHz
*.channelControl.pMax = 2.0mW
*.channelControl.sat = -85dBm
*.channelControl.alpha = 2 
*.channelControl.numChannels = 27
##############################################################################
#       Parameters for the display module in the hosts                       #
##############################################################################
# display parameters (same as channelControl parameters and mac parameters)
**.disp.carrierFrequency				 = 2.4GHz
**.disp.pMax 						 = 2.0mW
**.disp.sat						 = -85dBm	#[dBm]
**.disp.alpha						 = 2
**.disp.numChannels				 = 27
**.disp.transmitterPower				 = 1.0mW  	#[mW]
**.disp.sensitivity					 = -85dBm	#[dBm]

##############################################################################
#       Parameters for the Energy Model (units: mAh and mA)                  #
##############################################################################
#**.battery.batteryCapacity			 = 25	#[mAh]
#**.battery.meanTimeToFailure		 = -1s
#**.battery.usage_radio_idle			 = 1.38mA	#[mA]
#**.battery.usage_radio_recv			 = 9.6mA	#[mA]
#**.battery.usage_radio_sleep			 = 0.06mA	#[mA]
#**.phy.transmitterPower			 = 1.0mW	#[mW]
**.phy.usageCpuActive			= 7.6
**.phy.usageCpuSleep			= 0.237 ## 3.3 mA for IDLE mode, 0.237 mA for Standby

#**.host[*].**.


**.phy.usage_radio_idle			 = 1.38mA	#[mA]
**.phy.usage_radio_recv			 = 9.6mA	#[mA]
**.phy.usage_radio_sleep			 = 0.06mA	#[mA]




**.battery.nominal = 25
**.battery.capacity = 25
**.battery.voltage = 10
**.battery.resolution = 10s
**.battery.publishDelta = 0.5
**.battery.publishTime = 20s



##############################################################################
#       Output vectors                                                       #
##############################################################################
#**.End-to-end delay.vector-recording = true
#**.Mean end-to-end delay.vector-recording = true
**.NumberOfNeighbours.scalar-recording = true
**.TotalNeighborLqi.scalar-recording = true
**.AverageNeighborLqi.scalar-recording = true
**.MaxNeighborLqi.scalar-recording = true
**.MinNeighborLqi.scalar-recording = true
#**.num of collisions.scalar-recording = true
**.num-of-collisions.scalar-recording = true
**.ignoreRatio.scalar-recording = true
**.TEST_LengthLatestInterestArrivalPeriod.scalar-recording = true
**.numDataArrivals.scalar-recording = true
**.scalar-recording = false


#**.ControlPackets.vector-recording = true
#**.controlPacketFrequency.vector-recording = true
**.helloPacketFrequency.vector-recording = true
#**.helloBackPacketFrequency.vector-recording = true
#**.bcastInterestPacketFrequency.vector-recording = true
#**.ucastInterestPacketFrequency.vector-recording = true
#**.advertPacketFrequency.vector-recording = true
**.reinforcementPacketFrequency.vector-recording = true
#**.neighbourLqis.vector-recording = true
#**.RangeLqis.vector-recording = true
#**.TotalInterestArrivals.vector-recording = true
#**.InterestInterArrivalTimesVector.vector-recording = true
**.InterestInterDepartureTimesVector.vector-recording = true
**.AdvertInterDepartureTimesVector.vector-recording = true
**.dataPacketE2EDelay.vector-recording = true
**.breakagePacketFrequency.vector-recording = true
**.StabilityVector.vector-recording = true
**.modulesDownVector.vector-recording = true
**.vector-recording = false


##############################################################################
#       Simulation runs                                                      #
##############################################################################
