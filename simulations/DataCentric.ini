

[General]

# Miscellanious
**.debug = true
**.coreDebug = false
#**.channelNumber = 0
output-scalar-file-append = false
num-rngs = 2
cmdenv-express-mode = true
tkenv-plugin-path = ../../../Etc/plugins
# display parameters (same as channelControl parameters and mac parameters)
**.disp.carrierFrequency = 2.4GHz
**.disp.pMax = 2.0mW
**.disp.sat = -85dBm #[dBm]
**.disp.alpha = 2
**.disp.numChannels = 27
**.disp.transmitterPower = 1.0mW #[mW]
**.disp.sensitivity = -85dBm #[dBm]

# Energy model
**.phy.usageCpuActive = 7.6
**.phy.usageCpuSleep = 0.237 ## 3.3 mA for IDLE mode, 0.237 mA for Standby
**.phy.usage_radio_idle = 1.38mA #[mA]
**.phy.usage_radio_recv = 9.6mA #[mA]
**.phy.usage_radio_sleep = 0.06mA #[mA]
**.battery.nominal = 25
**.battery.capacity = 25
**.battery.voltage = 10
**.battery.resolution = 1s
**.battery.publishDelta = 0.5
**.battery.publishTime = 20s


# Common Layer 2 settings
**.ifqType = "DropTailQueue"
**.ifq.frameCapacity = 50
**.macAckWaitDuration = 0.005s # 0.00056s # Datacentric is 0.005s
**.macMaxCSMABackoffs = 7
**.macMaxFrameRetries = 10
**.phy.channelNumber				 = 11		# default 2.4G, (range [0, 26])
**.phy.transmitterPower				 = 0.1mW  	#[mW]
**.phy.sensitivity					 = -85dBm	#[dBm]
**.phy.thermalNoise				 = -110dBm	#[dBm]
**.phy.pathLossAlpha				 = 4 # Average indoor path loss 
**.phy.snirThreshold				 = 4dB
**.rxSetupTime = 0.00108s
#**.mac.BO = 8 # range [1,14]
#**.mac.SO = 4 #range [0, BO)
# channel physical parameters
*.channelControl.carrierFrequency = 2.4GHz
*.channelControl.pMax = 2.0mW
*.channelControl.sat = -85dBm
*.channelControl.alpha = 2
*.channelControl.numChannels = 27



# Common area - Average domestic property single floor
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 10m
**.constraintAreaMaxY = 12m
**.constraintAreaMaxZ = 3.5m

# half the recommended number from building automation RFC
# used for routing
**.numHosts = 125


# Property region and four room regions
**.numRegions = 5
**.region[0].x = 0
**.region[0].y = 0
**.region[0].z = 0
**.region[0].w = 10
**.region[0].h = 12
**.region[0].d = 3.5
**.region[0].context = "\x06\x00"
**.region[1].x = 0
**.region[1].y = 0
**.region[1].z = 0
**.region[1].w = 5
**.region[1].h = 6
**.region[1].d = 3.5
**.region[1].context = "\x06\x01\x00"
**.region[2].x = 5
**.region[2].y = 0
**.region[2].z = 0
**.region[2].w = 5
**.region[2].h = 6
**.region[2].d = 3.5
**.region[2].context = "\x06\x02\x00"
**.region[3].x = 0
**.region[3].y = 6
**.region[3].z = 0
**.region[3].w = 5
**.region[3].h = 6
**.region[3].d = 3.5
**.region[3].context = "\x06\x03\x00"
**.region[4].x = 5
**.region[4].y = 6
**.region[4].z = 0
**.region[4].w = 5
**.region[4].h = 6
**.region[4].d = 3.5
**.region[4].context = "\x06\x04\x00"


[Config DataCentricScenario_1]

#125 heterogeneous nodes particiapte in routing inside the property
#proctive routing by the control unit is NOT employed, but the control unit
#is on a known address.
#An appliance automatically attempts registration with the control unit about every second
#with 3 appliances in each room.  After 20s the sensor in each region starts sending data 

# Miscellanious
sim-time-limit = 1000s
network = DataCentricNet
description = "DataCentricScenario_1"
#**.fixhost[*].udpAppType = "UDPBurstAndBroadcast"
#**.udpApp.localPort = 1234
#**.udpApp.destPort = 1234
#**.routingFile = ""
#**.ip.procDelay = 10us
#**.arp.retryTimeout = 1s
#**.arp.retryCount = 3
#**.arp.cacheTimeout = 100s
#**.routingProtocol="AODVUU"
# Not really used
#**.udpApp.messageLength = 64B # Bytes
#**.udpApp.sendInterval = 3s #0.25s + uniform(-0.001s,0.001s,1)
#**.udpApp.burstDuration = 10s #uniform(1s,4s,1) #uniform(1s,4s,1)
#**.udpApp.sleepDuration = 0s
#**.udpApp.chooseDestAddrMode = "perBurst"
#**.udpApp.stopTime = 0s # uniform(10s,20s,1))
#**.udpApp.startTime = 30s #uniform(20s,35s)
#**.udpApp.delayLimit =200s
#**.udpApp.destAddrRNG = 1

**.host[*].mobilityType = "StationaryMobility"
**.mobility.initFromDisplayString = false

##############################################################################
#       Parameters for the network-layer                    #
##############################################################################
**.host[1].net.isPANCoor			 = true		# should be consistent with those in MAC
**.host[*].net.isPANCoor			 = false

##############################################################################
#       Parameters for the network interface and IFqueue               #
##############################################################################
#**.nic.ifqType						 = "DropTailQueue"
#**.ifq.frameCapacity				 = 20
#**.ifq.dropPk.

**.host[*].nic.mac.useIeee802Ctrl = false # ie use Ieee802154NetworkCtrlInfo which includes SNR and POWERREC


# Not used at present
**.host[*].net.meanDownTime = 1/1440 # 0.000694 # down time as a proportion of interval
**.host[*].net.meanDownTimeInterval = 86400 # down for an average of 1 min a day 
**.host[*].net.nodeConstraint = 10 # out of 0..255 this is a pretty stable node
**.host[*].net.Stability = 0 # 99.6 % stable, quarter the nodes




# AODV Parameters
#**.log_to_file = false
#**.hello_jittering = true
#**.optimized_hellos = true
#**.expanding_ring_search = false
#**.local_repair = true
#**.rreq_gratuitous = true
#**.rt_log_interval = 0
#**.unidir_hack = 0
#**.internet_gw_mode = 0
#**.receive_n_hellos = 1
#**.ratelimit = 1000
#**.llfeedback = false # //1000
#**.wait_on_reboot = 0
#**.active_timeout = 1800000 # // time in ms (30 mins)
#**.internet_gw_address = "0.0.0.0"
#**.useHover = false
#**.broadcastDelay=uniform(0s,0.01s) # 10 mseconds
#**.unicastDelay=uniform(0s,0.005s)






# Application operating in regular AODV / Host-centric Client/Server environment not data-centric
# set which node as control unit, make control unit a commonly known address
**.host[*].app.appMode = ""
#**.host[64].udpApp.isControlUnit = true
#**.host[*].udpApp.controlUnit = "csma802154net.fixhost[64]"

# Enable the possibility of broadcast communication
#**.host[*].udpApp.setBroadcast = true
#**.host[*].udpApp.outputInterfaceMulticastBroadcast = "wlan"






# One Source in each reagion
# three sinks in each region 
**.region[1..4].regionHost[0].sourceFor = "\x83"+"\x1"+"\x0"
**.region[1].regionHost[0].actionThreads = "OccupancyLivingRoom.txt"
**.region[2].regionHost[0].actionThreads = "OccupancyKitchen.txt"
**.region[3].regionHost[0].actionThreads = "OccupancyBedRoom.txt"
**.region[4].regionHost[0].actionThreads = "OccupancyDiningRoom.txt"
**.region[1].regionHost[1..3].sinkFor = "\x83"+"\x1"+"\x0"
**.region[2].regionHost[1..3].sinkFor = "\x83"+"\x1"+"\x0"
**.region[3].regionHost[1..3].sinkFor = "\x83"+"\x1"+"\x0"
**.region[4].regionHost[1..3].sinkFor = "\x83"+"\x1"+"\x0"

#**.region[1].regionHost[1..3].sourceFor = "\x2"+"\x2"+"\x0"
#**.region[2].regionHost[1..3].sourceFor = "\x2"+"\x2"+"\x0"
#**.region[3].regionHost[1..3].sourceFor = "\x2"+"\x2"+"\x0"
#**.region[4].regionHost[1..3].sourceFor = "\x2"+"\x2"+"\x0"



**.region[1].regionHost[1].actionThreads = "TV.txt"
**.region[1].regionHost[2].actionThreads = "PVR.txt"
**.region[1].regionHost[3].actionThreads = "LivingRoomLights.txt"

**.region[2].regionHost[1].actionThreads = "PS3.txt"
**.region[2].regionHost[2].actionThreads = "CRT.txt"
**.region[2].regionHost[3].actionThreads = "Laptop.txt"

**.region[3].regionHost[1].actionThreads = ""
**.region[3].regionHost[2].actionThreads = ""
**.region[3].regionHost[3].actionThreads = ""

**.region[4].regionHost[1].actionThreads = ""
**.region[4].regionHost[2].actionThreads = ""
**.region[4].regionHost[3].actionThreads = ""




#**.region[2].regionHost[1..3].sourceFor = "\x2"+"\x2"+"\x0"
#**.region[3].regionHost[1..3].sourceFor = "\x2"+"\x2"+"\x0"
#**.region[4].regionHost[1..3].sourceFor = "\x2"+"\x2"+"\x0"






# One sink/source node initiate binding every second

# TEMP
# No special control unit
#**.host[64].app.nodeStartTime = 1.0


#**.region[1].regionHost[0].nodeStartTime = 1.0 # enable send/receive send grads and hello
#**.region[1].regionHost[1].nodeStartTime = 2.0 # enable send/receive send grads and hello
#**.region[1].regionHost[2].nodeStartTime = 3.0 # enable send/receive send grads and hello
#**.region[1].regionHost[3].nodeStartTime = 4.0 # enable send/receive send grads and hello
#**.region[2].regionHost[0].nodeStartTime = 5.0 # enable send/receive send grads and hello
#**.region[2].regionHost[1].nodeStartTime = 6.0 # enable send/receive send grads and hello
#**.region[2].regionHost[2].nodeStartTime = 7.0 # enable send/receive send grads and hello
#**.region[2].regionHost[3].nodeStartTime = 8.0 # enable send/receive send grads and hello
#**.region[3].regionHost[0].nodeStartTime = 9.0 # enable send/receive send grads and hello
#**.region[3].regionHost[1].nodeStartTime = 10.0 # enable send/receive send grads and hello
#**.region[3].regionHost[2].nodeStartTime = 11.0 # enable send/receive send grads and hello
#**.region[3].regionHost[3].nodeStartTime = 12.0 # enable send/receive send grads and hello
#**.region[4].regionHost[0].nodeStartTime = 13.0 # enable send/receive send grads and hello
#**.region[4].regionHost[1].nodeStartTime = 14.0 # enable send/receive send grads and hello
#**.region[4].regionHost[2].nodeStartTime = 15.0 # enable send/receive send grads and hello
#**.region[4].regionHost[3].nodeStartTime = 16.0 # enable send/receive send grads and hello
#**.region[*].regionHost[*].nodeStartTime = 17.0 # enable send/receive send grads and hello



**.region[*].regionHost[*].nodeStartTime = 1.0 # enable send/receive send grads and hello
**.region[*].regionHost[*].timeSinkRegisterWithControlUnit = 1.0
**.region[*].regionHost[*].timeSourceRegisterWithControlUnit = 1.0
**.region[*].regionHost[*].scheduleStartTime = 3.0 # begin pattern of sending data, eg temp, watts, occupancy


#**.host[*].app.nodeStartTime = 1.0 # enable send/receive send grads and hello
#**.host[*].app.scheduleStartTime = 3.00 # begin pattern of sending data, eg temp, watts, occupancy


# Foursource nondes begin sending data at 20, 21 and 23 seconds
#**.region[1].regionHost[0].scheduleStartTime = 20.00
#**.region[2].regionHost[0].scheduleStartTime = 21.00
#**.region[3].regionHost[0].scheduleStartTime = 22.00
#**.region[4].regionHost[0].scheduleStartTime = 23.00
#**.region[*].regionHost[*].scheduleStartTime = 3.00

# Essential output stats
**.NumberOfNeighbours.scalar-recording = true
**.TotalNeighborLqi.scalar-recording = true
**.AverageNeighborLqi.scalar-recording = true
**.MaxNeighborLqi.scalar-recording = true
**.MinNeighborLqi.scalar-recording = true
#**.num of collisions.scalar-recording = true
**.num-of-collisions.scalar-recording = true
**.ignoreRatio.scalar-recording = true
**.TEST_LengthLatestInterestArrivalPeriod.scalar-recording = true
**.numDataArrivals.scalar-recording = true
**.scalar-recording = false


#**.End-to-end delay.vector-recording = true
#**.Mean end-to-end delay.vector-recording = true
#**.ControlPackets.vector-recording = true
#**.controlPacketFrequency.vector-recording = true
**.helloPacketFrequency.vector-recording = true
#**.helloBackPacketFrequency.vector-recording = true
#**.bcastInterestPacketFrequency.vector-recording = true
#**.ucastInterestPacketFrequency.vector-recording = true
#**.advertPacketFrequency.vector-recording = true
**.reinforcementPacketFrequency.vector-recording = true
#**.neighbourLqis.vector-recording = true
#**.RangeLqis.vector-recording = true
#**.TotalInterestArrivals.vector-recording = true
#**.InterestInterArrivalTimesVector.vector-recording = true
**.InterestInterDepartureTimesVector.vector-recording = true
**.AdvertInterDepartureTimesVector.vector-recording = true
**.dataPacketE2EDelay.vector-recording = true
**.breakagePacketFrequency.vector-recording = true
**.StabilityVector.vector-recording = true
**.modulesDownVector.vector-recording = true
**.vector-recording = false



# Other miscellanious output stats
**.Total sent.scalar-recording = true
**.Total received.scalar-recording = true
**.Total deleted.scalar-recording = true
**.Mean delay.scalar-recording = true
**.Min delay.scalar-recording = true
**.Max delay.scalar-recording = true
**.Deviation delay.scalar-recording = true
**.scalar-recording = false



##############################################################################
#       Parameters for the application-layer                                 #
##############################################################################

#        PREPREPARED STRINGS FOR USE
#        string STRINGEND = "\x0";
#        string DEMAND_QUERYBASED = "\x2";
#        string DEMAND_COLLABERATIONBASED = "\x42";
#        string ENVIRONMENTAL_EVENTBASED = "\x83";
#        string CURRENT = "\x2";
#        string BID = "\x1";
#        string OCCUPANCY = "\x1";
#        string TEMP = "\x2";




